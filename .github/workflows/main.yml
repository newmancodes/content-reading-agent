name: Main

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  lint-bicep-files:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Bicep linter
      run: az bicep lint --file ./bicep/content-reading-agent.bicep
    
  validate-bicep-files:
    needs: lint-bicep-files
    environment: prod
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Sign in to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_DEPLOYMENT_APP_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_DEPLOYMENT_APP_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_DEPLOYMENT_APP_SUBSCRIPTION_ID }}

    - name: Validate Deployment
      run: |
        sp_id = $(az rest --method GET --uri https://graph.microsoft.com/v1.0/me | jq -r '.id')
        echo "${sp_id}"
        az deployment group validate --resource-group rg-content-reading-agent --name content-reading-agent-val-${{ github.run_number }}-${{ github.run_attempt }} --template-file ./bicep/content-reading-agent.bicep --parameters ./bicep/.parameters/content-reading-agent.bicepparam |& tee ./validate-deployment.json
        [ $PIPESTATUS -eq 0 ] || exit $PIPESTATUS

    - name: Write Deployment Validation Output to Pull Request
      if: ${{ github.event_name == 'pull_request' && always() }}
      uses: ./.github/actions/upload-file-as-issue-comment
      with:
        pull-request-number: ${{ github.event.number }}
        label: 'Output from Deployment Validation'
        path-to-file: './validate-deployment.json'

    - name: Perform What-If Deployment
      id: perform-whatif-deployment
      run: |
        az deployment group what-if --resource-group rg-content-reading-agent --name content-reading-agent-pln-${{ github.run_number }}-${{ github.run_attempt }} --template-file ./bicep/content-reading-agent.bicep --parameters ./bicep/.parameters/content-reading-agent.bicepparam |& tee ./whatif-deployment.txt
        [ $PIPESTATUS -eq 0 ] || exit $PIPESTATUS

    - name: Write What-If Deployment Output to Pull Request
      if: ${{ github.event_name == 'pull_request' && always() }}
      uses: ./.github/actions/upload-file-as-issue-comment
      with:
        pull-request-number: ${{ github.event.number }}
        label: 'Output from What-If Deployment'
        path-to-file: './whatif-deployment.txt'
        file-format: 'text'

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x'

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.x'

    - name: Install dependencies
      run: |
        echo "Installing Poetry"
        sudo apt update
        sudo apt install pipx
        pipx ensurepath
        pipx install poetry==2.0.0

        echo "Installing .NET dependencies"

        echo "Installing Python dependencies"

    - name: Docker Compose Up
      id: dockerup
      run: docker compose -f ./docker-compose.yml up -d

    - name: Docker Compose Down
      if: steps.dockerup.conclusion == 'success'
      run: docker compose -f ./docker-compose.yml down

  deploy:
    if: ${{ github.event_name == 'push' }}
    needs: [ validate-bicep-files, build-and-test ]
    environment: prod
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Sign in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_DEPLOYMENT_APP_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_DEPLOYMENT_APP_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_DEPLOYMENT_APP_SUBSCRIPTION_ID }}

      - name: Deploy Infrastructure
        run: |
          echo az rest --method GET --uri https://graph.microsoft.com/v1.0/me
          sp_id = az rest --method GET --uri https://graph.microsoft.com/v1.0/me | jq '.id'
          echo "${sp_id}"
          az stack group create --resource-group rg-content-reading-agent --name content-reading-agent --description 'Content Reading AI Agent' --deny-settings-mode denyWriteAndDelete --deny-settings-excluded-principals ${sp_id} --action-on-unmanage deleteAll --template-file ./bicep/content-reading-agent.bicep --parameters ./bicep/.parameters/content-reading-agent.bicepparam |& tee ./stack-create.json
          [ $PIPESTATUS -eq 0 ] || exit $PIPESTATUS
      
      - name: Debugging
        run: cat ./stack-create.json
